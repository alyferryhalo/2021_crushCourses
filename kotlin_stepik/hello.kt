// В недалеком будущем человечество совершило контакт с разумными жителями созвездия Жука. Пришельцы отлично понимают английский язык, 
// однако культ этикета у них доведен до абсурда, поэтому любой человек отклонившийся от официальной формы приветствия будет съеден на месте.
// Напишите программу, выводящую на экран каноническую форму приветствия для жителей созвездия Жука: 
// Hello brave citizen of glorious Bug Kingdom!

fun main (args: Array<String>){
    print("Hello brave citizen of glorious Bug Kingdom!");
}

//

// Жители созвездия Жука были приятно удивлены вежливостью землян. 
// В благодарность за столь теплый прием их лидер согласился ответить на любые вопросы землян. 
// Однако необходимость строго следовать букве этикета никуда не делась, поэтому землянам вновь необходим инструмент для формулирования вежливых обращений.
// Напишите программу, принимающую от пользователя (через readLine) его имя, например Ivan, 
// и выводящую на экран текст вежливого обращения к правителю созвездия Жука:
// Oh mighty ruler of Bug Kingdom, the earthling called Ivan seeks for your wisdom!

fun main (args: Array<String>){
    val user_name : String? = readLine();
    print("Oh mighty ruler of Bug Kingdom, the earthling called ${user_name} seeks for your wisdom!");
}

//

// Из-за анатомических особенностей жителей Созвездия Жука земляне постоянно ошибаются при рассадке дипломатических делегаций пришельцев 
// в худшую сторону - не хватает стульев. Проблема возникает из-за древнего рефлекса - по мере роста  группы, пришельцы начинают 
// автоматически занимать больше сидячих мест, чем им на самом деле требуется. Анализ видеозаписей позволил считать, 
// что зависимость количества стульев (y) от количества пришельцев (х) имеет вид:
// y = x + z
// где z - это целая часть от числа (x/2).
// Для предотвращения конфликтов на почве недостатка посадочных мест вам необходимо создать функцию calcChairs для расчета количества стульев. 
// Функция принимает один аргумент (количество пришельцев) и возвращает требуемое целое количество стульев.

fun calcChairs(bugs: Int): Int {
    return (bugs + bugs/2)
}

// 

// Жителям созвездия Жука незнакомы экономические проблемы, так как  их денежная единица жестко привязана к основному ресурсу для просвещенных пришельцев -
// обыкновенному сахару. При этом, курс, сколько килограммов сахара дается за одну денежную единицу(cashAmount), является постоянным 
// (для одного конкретного пришельца) и варьируется в зависимости следующих параметров:
// дня недели (dayNumber, целое число),
// "ранга" пришельца в социальной иерархии (bugRank, целое число).
// Еще раз: курс обмена одной денежной единицы равен произведению номера дня недели и ранга пришельца, к которому добавлена вселенская константа(42).
// Напишите функцию, которая пересчитывает деньги жителей созвездия Жука в эквивалентную массу сахара. В качестве параметров функция должна принимать: 
// день недели, ранг пришельца и количество денежных единиц . Возвращаемое значение  - количество килограммов сахара (целое число).

fun calcBugMoneyValue(dayNumber: Int, bugRank: Int, cashAmount: Int): Int {
    return ((dayNumber*bugRank + 42) * cashAmount)
}
